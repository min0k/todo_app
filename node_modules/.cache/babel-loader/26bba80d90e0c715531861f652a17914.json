{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nexport default function useTodoLogic() {\n  _s();\n\n  const [todos, setTodos] = React.useState(JSON.parse(localStorage.getItem(\"todos\")) || []);\n  const [userInputNewTodo, setUserInputNewTodo] = React.useState(\"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function handleInput(e) {\n    setUserInputNewTodo(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = nanoid();\n\n    if (userInputNewTodo === \"\") {\n      return;\n    }\n\n    setTodos(prevValue => [...prevValue, {\n      task: userInputNewTodo,\n      isDone: false,\n      id: id\n    }]);\n    clearInput();\n  }\n\n  function clearInput() {\n    setUserInputNewTodo(\" \");\n    console.log(userInputNewTodo);\n    console.log(\"inputcleared\");\n  }\n\n  function completeTask(id) {\n    const updatedTodos = todos.map(obj => {\n      if (obj.id === id) {\n        return { ...obj,\n          isDone: !obj.isDone\n        };\n      } else {\n        return { ...obj\n        };\n      }\n    });\n    setTodos(updatedTodos);\n  }\n\n  function handleClearFinishedTasks() {\n    const clearedArray = todos.filter(e => e.isDone !== true);\n    setTodos(clearedArray);\n  }\n\n  return {\n    handleSubmit,\n    handleInput,\n    userInputNewTodo,\n    todos,\n    completeTask,\n    handleClearFinishedTasks\n  };\n}\n\n_s(useTodoLogic, \"J0rXZKoMuVUDvJ6wENKhv5ByuFc=\");","map":{"version":3,"sources":["/Users/mino/Desktop/projects/todo_app/src/domain_components/useTodoLogic.js"],"names":["React","nanoid","useTodoLogic","todos","setTodos","useState","JSON","parse","localStorage","getItem","userInputNewTodo","setUserInputNewTodo","useEffect","setItem","stringify","handleInput","e","target","value","handleSubmit","preventDefault","id","prevValue","task","isDone","clearInput","console","log","completeTask","updatedTodos","map","obj","handleClearFinishedTasks","clearedArray","filter"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CACxBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EADrB,CAA1B;AAIA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,KAAK,CAACK,QAAN,CAAe,EAAf,CAAhD;AAEAL,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAeX,KAAf,CAA9B;AACD,GAFD,EAEG,CAACA,KAAD,CAFH;;AAIA,WAASY,WAAT,CAAqBC,CAArB,EAAwB;AACtBL,IAAAA,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACD;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,EAAE,GAAGpB,MAAM,EAAjB;;AAEA,QAAIS,gBAAgB,KAAK,EAAzB,EAA6B;AAC3B;AACD;;AAEDN,IAAAA,QAAQ,CAAEkB,SAAD,IAAe,CACtB,GAAGA,SADmB,EAEtB;AACEC,MAAAA,IAAI,EAAEb,gBADR;AAEEc,MAAAA,MAAM,EAAE,KAFV;AAGEH,MAAAA,EAAE,EAAEA;AAHN,KAFsB,CAAhB,CAAR;AASAI,IAAAA,UAAU;AACX;;AAGD,WAASA,UAAT,GAAsB;AACpBd,IAAAA,mBAAmB,CAAC,GAAD,CAAnB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYjB,gBAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AAGD,WAASC,YAAT,CAAsBP,EAAtB,EAA0B;AACxB,UAAMQ,YAAY,GAAG1B,KAAK,CAAC2B,GAAN,CAAWC,GAAD,IAAS;AACtC,UAAIA,GAAG,CAACV,EAAJ,KAAWA,EAAf,EAAmB;AACjB,eAAO,EACL,GAAGU,GADE;AAELP,UAAAA,MAAM,EAAE,CAACO,GAAG,CAACP;AAFR,SAAP;AAID,OALD,MAKO;AACL,eAAO,EACL,GAAGO;AADE,SAAP;AAGD;AACF,KAXoB,CAArB;AAYA3B,IAAAA,QAAQ,CAACyB,YAAD,CAAR;AACD;;AAED,WAASG,wBAAT,GAAoC;AAClC,UAAMC,YAAY,GAAG9B,KAAK,CAAC+B,MAAN,CAAclB,CAAD,IAAOA,CAAC,CAACQ,MAAF,KAAa,IAAjC,CAArB;AACApB,IAAAA,QAAQ,CAAC6B,YAAD,CAAR;AACD;;AAED,SAAO;AACLd,IAAAA,YADK;AAELJ,IAAAA,WAFK;AAGLL,IAAAA,gBAHK;AAILP,IAAAA,KAJK;AAKLyB,IAAAA,YALK;AAMLI,IAAAA;AANK,GAAP;AAQD;;GAxEuB9B,Y","sourcesContent":["import React from \"react\";\nimport { nanoid } from \"nanoid\";\n\nexport default function useTodoLogic() {\n  const [todos, setTodos] = React.useState(\n    JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n\n  const [userInputNewTodo, setUserInputNewTodo] = React.useState(\"\");\n\n  React.useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function handleInput(e) {\n    setUserInputNewTodo(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const id = nanoid();\n\n    if (userInputNewTodo === \"\") {\n      return;\n    }\n\n    setTodos((prevValue) => [\n      ...prevValue,\n      {\n        task: userInputNewTodo,\n        isDone: false,\n        id: id,\n      },\n    ]);\n    \n    clearInput();\n  }\n\n\n  function clearInput() {\n    setUserInputNewTodo(\" \");\n    console.log(userInputNewTodo);\n    console.log(\"inputcleared\");\n  }\n\n\n  function completeTask(id) {\n    const updatedTodos = todos.map((obj) => {\n      if (obj.id === id) {\n        return {\n          ...obj,\n          isDone: !obj.isDone,\n        };\n      } else {\n        return {\n          ...obj,\n        };\n      }\n    });\n    setTodos(updatedTodos);\n  }\n\n  function handleClearFinishedTasks() {\n    const clearedArray = todos.filter((e) => e.isDone !== true);\n    setTodos(clearedArray);\n  }\n\n  return {\n    handleSubmit,\n    handleInput,\n    userInputNewTodo,\n    todos,\n    completeTask,\n    handleClearFinishedTasks,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}